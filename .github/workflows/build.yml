name: Build Executable

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build with PyInstaller
        run: |
          pyinstaller pylo.py --onefile --noconsole

      - name: Rename and zip binary
        shell: bash
        run: |
          mkdir upload
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            mv dist/pylo.exe upload/pylo-windows.exe
          elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            mv dist/pylo upload/pylo-macos
            cd upload && zip pylo-macos.zip pylo-macos
          else
            mv dist/pylo upload/pylo-linux
            cd upload && zip pylo-linux.zip pylo-linux
          fi
      
      - name: Zip on Windows (Compress-Archive)
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          Compress-Archive -Path upload/pylo-windows.exe -DestinationPath upload/pylo-windows.zip

      - name: Get latest release tag
        id: get_release
        if: github.event_name == 'workflow_dispatch'
        shell: bash
        run: |
          latest_tag=$(gh release list --limit 1 --json tagName --jq '.[0].tagName')
          echo "LATEST_TAG=$latest_tag" >> $GITHUB_ENV
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: upload/*.zip
          tag_name: ${{ env.LATEST_TAG || github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}

  update-version:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'release' || github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout main branch
        uses: actions/checkout@v3
        with:
          ref: main

      - name: Set up Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Determine release tag
        shell: bash
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            tag=$(gh release list --limit 1 --json tagName --jq '.[0].tagName')
          else
            tag="${{ github.ref_name }}"
          fi
          echo "TAG_NAME=$tag" >> $GITHUB_ENV
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}

      - name: Update version.txt with release tag
        run: |
          echo "$TAG_NAME" > version.txt
          git add version.txt
          git commit -m "Update version.txt to $TAG_NAME" || echo "No changes to commit"
          git remote set-url origin https://x-access-token:${{ secrets.GH_PAT }}@github.com/${{ github.repository }}
          git push origin HEAD:main

